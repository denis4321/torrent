/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * TorrentWindow.java
 *
 * Created on 23.09.2011, 17:31:55
 */
package com.conarhco.torrent.se;

import java.awt.Frame;
import java.io.File;
import java.io.IOException;
import java.util.logging.Logger;
import javax.swing.JFileChooser;

/**
 * @author dprokopiuk
 */
public class TorrentWindow extends javax.swing.JDialog {

    private Settings setts;

    /** Creates new form TorrentWindow */
    public TorrentWindow(Settings settings) {
        super((Frame) null, "Настройки", true);
        setts = settings;
        initComponents();
        setLocationRelativeTo(null);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        loginText = new javax.swing.JTextField();
        loginLabel = new javax.swing.JLabel();
        rateSpinner = new javax.swing.JSpinner();
        rateLabel = new javax.swing.JLabel();
        storePathLabel = new javax.swing.JLabel();
        storeText = new javax.swing.JTextField();
        startButton = new javax.swing.JButton();
        openFileChooser = new javax.swing.JButton();

        setTitle("TorrentME");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 53;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 5);
        getContentPane().add(loginText, gridBagConstraints);

        loginLabel.setText("Логин (rutracker.org)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 2, 5);
        getContentPane().add(loginLabel, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 5);
        getContentPane().add(rateSpinner, gridBagConstraints);

        rateLabel.setText("Укажите частоту отправки запроса на сервер в минутах");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 2, 5);
        getContentPane().add(rateLabel, gridBagConstraints);

        storePathLabel.setText("Укажите директорию хранения фильма ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 2, 5);
        getContentPane().add(storePathLabel, gridBagConstraints);

        storeText.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 5);
        getContentPane().add(storeText, gridBagConstraints);

        startButton.setText("SAVE");
        startButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.insets = new java.awt.Insets(14, 14, 14, 14);
        getContentPane().add(startButton, gridBagConstraints);

        openFileChooser.setText("...");
        openFileChooser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openFileChooserActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 5);
        getContentPane().add(openFileChooser, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void startButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startButtonActionPerformed
        try {
            int rate = Integer.parseInt(rateSpinner.getValue().toString());
            String login = loginText.getText().trim();
            String storePath = storeText.getText();
            setts.setLogin(login.isEmpty() ? null : login);
            setts.setStorePath(storePath.isEmpty() ? null : new File(storePath));
            setts.setRate(rate);
            setts.save();
            this.setVisible(false);
        } catch (Exception ex) {
            DownloaderClientMain.showError(this, ex);
        }
    }//GEN-LAST:event_startButtonActionPerformed

    private void openFileChooserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openFileChooserActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int choiseButton = chooser.showOpenDialog(this);

        if (choiseButton == JFileChooser.APPROVE_OPTION) {
            String path = chooser.getSelectedFile().getAbsolutePath();
            storeText.setText(path);
            //Logger.getLogger(DownloaderClientMain.LOG).info("Destination file has been set as "+path);
                Logger.getLogger(DownloaderClientMain.LOG).config("user directory for .torrent files is set to " + path);
        }
    }//GEN-LAST:event_openFileChooserActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        setts.load();

        loginText.setText(setts.getLogin());
        rateSpinner.setValue(setts.getRate());
        storeText.setText(setts.getStorePath() != null ? setts.getStorePath().getAbsolutePath() : "");
    }//GEN-LAST:event_formWindowOpened
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel loginLabel;
    private javax.swing.JTextField loginText;
    private javax.swing.JButton openFileChooser;
    private javax.swing.JLabel rateLabel;
    private javax.swing.JSpinner rateSpinner;
    private javax.swing.JButton startButton;
    private javax.swing.JLabel storePathLabel;
    private javax.swing.JTextField storeText;
    // End of variables declaration//GEN-END:variables
}
